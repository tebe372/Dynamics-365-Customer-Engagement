{
  "swagger": "2.0",
  "info": {
    "version": "v1.2",
    "title": "Online Management API for Dynamics 365 Customer Engagement",
    "description": "The REST API provides the ability to manage the Customer Engagement online instances in an Office 365 tenant."
  },
  "host": "{ServiceUrl}",
  "schemes": [
    ""
  ],
  "paths": {
    "/api/v1.2/Currencies": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Retrieves currencies in a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetCurrencies",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of available currencies in a Customer Engagement instance.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Region"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/InstanceBackups": {
      "get": {
        "tags": [
          "InstanceBackups"
        ],
        "summary": "Retrieves all backups of a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstanceBackups",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "query",
            "description": "Instance ID for retrieving the backups.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "List of backups available for a Customer Engagement instance.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstanceBackup"
              }
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "post": {
        "tags": [
          "InstanceBackups"
        ],
        "summary": "Backs up a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "BackupInstance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "backupInfo",
            "in": "body",
            "description": "Object containing information about the backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewInstanceBackup"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Backup operation started.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the backup operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          }
        }
      }
    },
    "/api/v1.2/InstanceBackups/{instanceId}/{restorePointId}": {
      "get": {
        "tags": [
          "InstanceBackups"
        ],
        "summary": "Retrieves a Customer Engagement instance backup based on the restore point.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstanceBackup",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "instanceId",
            "in": "path",
            "description": "Id of the instance to retrieve the backup from.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "restorePointId",
            "in": "path",
            "description": "Restore point of an existing instance backup.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "A Customer Engagement instance backup.",
            "schema": {
              "$ref": "#/definitions/InstanceBackup"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves all Customer Engagement instances in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstances",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of Customer Engagement instances instances retrieved from your Office 365 tenant.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Instance"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/Instances/{id}": {
      "get": {
        "tags": [
          "Instances"
        ],
        "summary": "Retrieves a Customer Engagement instance in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of an instance to retieve.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "The retrieved Customer Engagement instance.",
            "schema": {
              "$ref": "#/definitions/Instance"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/Provision": {
      "put": {
        "tags": [
          "Instances"
        ],
        "summary": "Provisions (creates) a Customer Engagement instance in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "ProvisionInstance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "newInstance",
            "in": "body",
            "description": "Allowed state for the new instance.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewInstance"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "description": "Indicates whether to validate or create an instance. Set True to validate; set False to create.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "If validate was set, validation was successful. If validation was not set, the instance was provisioned without requiring an operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "examples": {
              "application/json": [
                {
                  "operationId": "00000000-0000-0000-0000-000000000000",
                  "status": "Succeeded",
                  "errors": [],
                  "information": [],
                  "operationLocation": null,
                  "resourceLocation": null,
                  "context": {
                    "items": {
                      "instanceState": "Pending",
                      "admin.InstanceId": "b12d586f-8ffc-4b0f-97f7-7fb89bcc3f26"
                    }
                  }
                }
              ]
            }
          },
          "202": {
            "description": "Provision operation started.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "examples": {
              "application/json": [
                {
                  "operationId": "accac4b5-2478-4fc7-b8b0-6b979e837bb1",
                  "status": "NotStarted",
                  "errors": [],
                  "information": [],
                  "operationLocation": null,
                  "resourceLocation": null,
                  "context": {
                    "items": {
                      "instanceState": "Pending",
                      "admin.InstanceId": "e2a9c8b3-2ead-4a83-b8ad-d1587b6415de"
                    }
                  }
                }
              ]
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the provision operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            },
            "examples": {
              "application/json": [
                {
                  "operationId": "00000000-0000-0000-0000-000000000000",
                  "status": "FailedToCreate",
                  "errors": [
                    {
                      "subject": "ProvisioningJobCreation",
                      "description": "There was an error creating the provisioning job.",
                      "code": null
                    }
                  ],
                  "information": [],
                  "operationLocation": null,
                  "resourceLocation": null,
                  "context": {
                    "items": {
                      "instanceState": "FailedProvisioning"
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/api/v1.2/Instances/{targetInstanceId}/Reset": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Resets a Customer Engagement instance in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "ResetInstance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "targetInstanceId",
            "in": "path",
            "description": "ID of the Customer Engagement instance that you want to reset.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resetRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sandbox Operation completed",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Reset Instance Operation Started",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the reset operation",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/{targetInstanceId}/Restore": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Restores a Customer Engagement instance in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "RestoreInstance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "targetInstanceId",
            "in": "path",
            "description": "ID of the Customer Engagement instance that you want to restore.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "instanceRestorePoint",
            "in": "body",
            "description": "The restore point of an existing instance backup.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceRestorePoint"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Restore Instance Operation Started.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the restore operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/{id}/Users/{userObjectId}/ApplyUser": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Force applies a user on a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "ApplyUser",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Customer Engagement instance to force apply the user.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "userObjectId",
            "in": "path",
            "description": "UserObjectID of the user to force apply on the instance.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "202": {
            "description": "The ApplyUser operation started.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the ApplyUser operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/{id}/UpdateAdminMode": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Updates the Admin Mode settings of a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "UpdateInstanceAdminMode",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Customer Engagement instance to update the admin mode settings.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "adminModeSettings",
            "in": "body",
            "description": "The admin mode settings to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InstanceAdminModeSettings"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "description": "Indicates whether to validate or update an instance. Set True to validate; set False to update.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Update Instance Admin Mode Operation Executed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or executing the update admin mode update operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/{id}/ConfigureInstance": {
      "post": {
        "tags": [
          "Instances"
        ],
        "summary": "Updates instance settings for the specified Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "ConfigureInstance",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the instance to update the settings.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "settings",
            "in": "body",
            "description": "The instance settings to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfigureInstanceSettings"
            }
          },
          {
            "name": "validate",
            "in": "query",
            "description": "Indicates whether to validate or update an instance. Set True to validate; set False to update.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Configure Instance Operation Executed",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or executing the configure instance operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Instances/{id}/Delete": {
      "delete": {
        "tags": [
          "Instances"
        ],
        "summary": "Deletes a Customer Engagement instance in your Office 365 tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "DeleteInstance",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the Customer Engagement instance to delete.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "validate",
            "in": "query",
            "description": "Indicates whether to validate or delete an instance. Set True to validate; set False to delete.",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "If validate was set, validation was executed.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "202": {
            "description": "Delete Instance Operation Started.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the delete operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/InstanceTypeInfo": {
      "get": {
        "tags": [
          "InstanceTypeInfo"
        ],
        "summary": "Retrieve information about all the instance types in Customer Engagement.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstanceTypesInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of instance types information.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/InstanceTypeInfo"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/InstanceTypeInfo/{type}": {
      "get": {
        "tags": [
          "InstanceTypeInfo"
        ],
        "summary": "Retrieve information about a Customer Engagement instance type.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetInstanceTypeInfo",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "An instance type",
            "required": true,
            "type": "string",
            "enum": [
              "None",
              "Production",
              "Sandbox",
              "Support",
              "Preview",
              "Trial",
              "Default",
              "Developer"
            ],
            "x-ms-enum": {
              "name": "InstanceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instance Type Information",
            "schema": {
              "$ref": "#/definitions/InstanceTypeInfo"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Languages": {
      "get": {
        "tags": [
          "Languages"
        ],
        "summary": "Retrieves languages supported by Customer Enagagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetLanguages",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "releaseId",
            "in": "query",
            "description": "ID of the release of Customer Enagagement.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "List of supported languages",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Language"
              }
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Notifications/{tenantId}/{userObjectId}": {
      "get": {
        "tags": [
          "Notification"
        ],
        "summary": "Retrieves notifications from the Notification service.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetAllNotifications",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userObjectId",
            "in": "path",
            "description": "The userObjectId, which is the same as the adminId.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "tenantId",
            "in": "path",
            "description": "ID of the tenant.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "environments",
            "in": "query",
            "description": "IDs of the instances you want notifications for.",
            "required": true,
            "type": "array",
            "items": {},
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Notifications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserNotification"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/Notifications": {
      "post": {
        "tags": [
          "Notification"
        ],
        "summary": "Post user notifications to the Notification service.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "PostUserNotification",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "userNotification",
            "in": "body",
            "description": "The user notification to be posted.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserNotification"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "PostUserNotification Operation Started",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "400": {
            "description": "There was an issue either validating or starting the PostUserNotification operation.",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Operation/{id}": {
      "get": {
        "tags": [
          "OperationStatus"
        ],
        "summary": "Retrieves status of an operation in your Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api.md#service-url)",
        "operationId": "GetOperationStatus",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the operation to get the status for.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OperationStatus",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/Operation": {
      "get": {
        "tags": [
          "OperationStatus"
        ],
        "summary": "Retrieves operation status of a Customer Engagement instance.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api.md#service-url)",
        "operationId": "GetOperationStatusByQuery",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "query.operationProvider",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "query.instanceId",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OperationStatus",
            "schema": {
              "$ref": "#/definitions/OperationStatus"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      }
    },
    "/api/v1.2/ServiceVersions": {
      "get": {
        "tags": [
          "ServiceVersions"
        ],
        "summary": "Retrieves information about all the supported releases for Customer Engagement.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api.md#service-url)",
        "operationId": "GetServiceVersions",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Available Service Versions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceVersion"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/Templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Retrieves templates supported for provisioning a Customer Engagement instance.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api.md#service-url)",
        "operationId": "GetTemplates",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of available templates",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Template"
              }
            }
          }
        }
      }
    },
    "/api/v1.2/TenantApplicationIdentities": {
      "get": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "summary": "Retrieves all Tenant Application Identities for a tenant.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api.#service-url)",
        "operationId": "GetTenantApplicationIdentities",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of tenant application identities for a tenant.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TenantApplicationIdentity"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "summary": "Registers a tenant application identity to be used with Online Management API.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "CreateTenantApplicationIdentity",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "tenantApplicationIdentity",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantApplicationIdentity"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "New Tenant Application Identity created",
            "schema": {
              "$ref": "#/definitions/TenantApplicationIdentity"
            }
          }
        }
      }
    },
    "/api/v1.2/TenantApplicationIdentities/{id}": {
      "get": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "summary": "Retrieves a Tenant Application Identity.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTenantApplicationIdentity",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of a Tenant Application Identity to retrieve.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "TenantApplicationIdentity",
            "schema": {
              "$ref": "#/definitions/TenantApplicationIdentity"
            }
          },
          "404": {
            "description": "NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "operationId": "DeleteTenantApplicationIdentity",
        "summary": "Deletes a Tenant Application Identity.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "TenantApplicationIdentity is deleted."
          }
        }
      }
    },
    "/api/v1.2/TenantApplicationIdentities/{id}/Enable": {
      "post": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "operationId": "EnableTenantApplicationIdentity",
        "summary": "Enables a Tenant Application Identity.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Application Identity is enabled."
          }
        }
      }
    },
    "/api/v1.2/TenantApplicationIdentities/{id}/Disable": {
      "post": {
        "tags": [
          "TenantApplicationIdentities"
        ],
        "operationId": "DisableTenantApplicationIdentity",
        "summary": "Disables a Tenant Application Identity.",
        "description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Tenant Application Identity is disabled."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Runs": {
      "get": {
        "tags": [
          "TestRuns"
        ],
        "summary": "Retrieves all the test suite runs.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuiteRuns",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test suite runs",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRunApi"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "TestRuns"
        ],
        "summary": "Start a test run",
        "operationId": "TestRuns_Post",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "202": {
            "description": "Test run started."
          },
          "404": {
            "description": "Test suite was not found."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Runs/{runId}": {
      "get": {
        "tags": [
          "TestRuns"
        ],
        "summary": "Retrieves the test suite based on the specified ID.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuiteRunById",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test suite run",
            "schema": {
              "$ref": "#/definitions/TestRunApi"
            }
          },
          "404": {
            "description": "Test suite run was not found."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Runs/{runId}/TestCases": {
      "get": {
        "tags": [
          "TestRuns"
        ],
        "summary": "Get all the test run's test cases.\r\nSupports OData $filter query parameters on Outcome field (e.g. $filter=Outcome eq 'Failed')",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestRunTestCases",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test cases of the run.",
            "schema": {
              "$ref": "#/definitions/GetTestCasesResponseApi"
            }
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Runs/{runId}/active-run": {
      "delete": {
        "tags": [
          "TestRuns"
        ],
        "summary": "Cancel an active test run.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "TestRuns_CancelActiveRun",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "runId",
            "in": "path",
            "description": "The run identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully canceled.",
            "schema": {
              "$ref": "#/definitions/CancelActiveRunResponse"
            }
          },
          "404": {
            "description": "Test suite or test run was not found."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites": {
      "get": {
        "tags": [
          "TestSuites"
        ],
        "summary": "Retrieves all the test suites for the specified Organization ID.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuites",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "Test suites",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSuiteApi"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestSuites"
        ],
        "summary": "Create a new test suite.",
        "operationId": "TestSuites_CreateTestSuite",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteCreateRequest",
            "in": "body",
            "description": "Test suite create request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSuiteCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Test suite created or updated."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}": {
      "get": {
        "tags": [
          "TestSuites"
        ],
        "summary": "Get the test suite details for the specified Organization ID and test suite name.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuiteByName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The test suite returned.",
            "schema": {
              "$ref": "#/definitions/TestSuiteApi"
            }
          },
          "404": {
            "description": "Test suite was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "TestSuites"
        ],
        "summary": "Deletes the test suite.",
        "operationId": "TestSuites_DeleteTestSuite",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted."
          },
          "404": {
            "description": "Test suite was not found."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Triggers": {
      "get": {
        "tags": [
          "TestTriggers"
        ],
        "summary": "Retrieves all the test suite triggers.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuiteTriggers",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test suite triggers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestRunTrigger"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "TestTriggers"
        ],
        "summary": "Create or replace a test suite trigger.",
        "operationId": "TestTriggers_CreateTestSuiteTrigger",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "testRunTriggerCreateRequest",
            "in": "body",
            "description": "The test run trigger create request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestRunTriggerCreateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Test suite created or updated."
          }
        }
      }
    },
    "/api/v1.2/Instances/{organizationId}/TestSuites/{testSuiteName}/Triggers/{testRunTriggerName}": {
      "get": {
        "tags": [
          "TestTriggers"
        ],
        "summary": "Get the test suite trigger by name.",
	"description": "For a list of region-specific service URLs, see [Service URL](/dynamics365/customer-engagement/developer/online-management-api/get-started-online-management-api#service-url)",
        "operationId": "GetTestSuiteTriggerByName",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "testRunTriggerName",
            "in": "path",
            "description": "Name of the test run trigger.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Test suite trigger.",
            "schema": {
              "$ref": "#/definitions/TestRunTrigger"
            }
          },
          "404": {
            "description": "Test suite trigger was not found."
          }
        }
      },
      "delete": {
        "tags": [
          "TestTriggers"
        ],
        "summary": "Deletes the test suite trigger.",
        "operationId": "TestTriggers_DeleteTestSuiteTrigger",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "ID of the organization.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "testSuiteName",
            "in": "path",
            "description": "Name of the test suite.",
            "required": true,
            "type": "string"
          },
          {
            "name": "testRunTriggerName",
            "in": "path",
            "description": "Name of the test run trigger.",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted."
          },
          "404": {
            "description": "Test suite trigger was not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Region": {
      "required": [
        "RegionCode",
        "Name",
        "Currencies"
      ],
      "type": "object",
      "properties": {
        "RegionCode": {
          "type": "string",
          "description": "Code of the region"
        },
        "Name": {
          "type": "string",
          "description": "Name of the region"
        },
        "Currencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          }
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "Code": {
          "description": "Code of the Currency in Customer Engagement",
          "maxLength": 3,
          "minLength": 3,
          "type": "string"
        },
        "Precision": {
          "description": "Precision of the Currency in Customer Engagement",
          "format": "int32",
          "maximum": 4,
          "minimum": 0,
          "type": "integer"
        },
        "Symbol": {
          "description": "Symbol of the Currency in Customer Engagement",
          "maxLength": 4,
          "minLength": 0,
          "type": "string"
        },
        "Name": {
          "description": "Name of the Currency in Customer Engagement",
          "type": "string"
        }
      }
    },
    "InstanceBackup": {
      "required": [
        "Id",
        "Status",
        "CreatedBy",
        "CreatedOn",
        "ExpiresOn",
        "Version",
        "Label"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExpiresOn": {
          "format": "date-time",
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Notes": {
          "type": "string"
        },
        "Label": {
          "type": "string"
        },
        "IsAzureBackup": {
          "type": "boolean"
        },
        "AzureStorageInformation": {
          "$ref": "#/definitions/AzureStorage"
        }
      }
    },
    "AzureStorage": {
      "required": [
        "ContainerName",
        "StorageAccountKey",
        "StorageAccountName"
      ],
      "type": "object",
      "properties": {
        "ContainerName": {
          "type": "string",
          "description": "For internal use only."
        },
        "StorageAccountKey": {
          "type": "string",
          "description": "For internal use only."
        },
        "StorageAccountName": {
          "type": "string",
          "description": "For internal use only."
        }
      }
    },
    "NewInstanceBackup": {
      "required": [
        "InstanceId",
        "Label"
      ],
      "type": "object",
      "properties": {
        "InstanceId": {
          "format": "uuid",
          "type": "string",
          "description": "ID of the instance to backup."
        },
        "Label": {
          "type": "string",
          "description": "Label to help identify this backup for future restoration."
        },
        "Notes": {
          "type": "string",
          "description": "Notes to help identify this backup for future restoration."
        },
        "IsAzureBackup": {
          "type": "boolean",
          "description": "For internal use only."
        },
        "AzureStorageInformation": {
          "$ref": "#/definitions/AzureStorage"
        }
      }
    },
    "OperationStatus": {
      "required": [
        "OperationId",
        "Status"
      ],
      "type": "object",
      "properties": {
        "OperationId": {
          "format": "uuid",
          "type": "string",
          "description": "ID of the backup operation."
        },
        "Status": {
          "enum": [
            "None",
            "FailedToCreate",
            "NotStarted",
            "Ready",
            "Pending",
            "Running",
            "Succeeded",
            "Failed",
            "Cancelling",
            "Cancelled",
            "Aborting",
            "Aborted",
            "Tombstone",
            "Deleting",
            "Deleted"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "OperationState"
          }
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemDescription"
          },
          "readOnly": true
        },
        "Information": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ItemDescription"
          },
          "readOnly": true
        },
        "OperationLocation": {
          "type": "string"
        },
        "ResourceLocation": {
          "type": "string"
        },
        "Context": {
          "$ref": "#/definitions/OperationContext",
          "readOnly": true
        }
      }
    },
    "ItemDescription": {
      "type": "object",
      "properties": {
        "Subject": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Code": {
          "type": "string"
        }
      }
    },
    "OperationContext": {
      "type": "object",
      "properties": {
        "Items": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true
        }
      }
    },
    "Instance": {
      "description": "A representation of an organization",
      "required": [
        "Id",
        "UniqueName",
        "Version",
        "ApplicationUrl",
        "ApiUrl",
        "State",
        "Type",
        "FriendlyName",
        "DomainName",
        "InitialUserEmail"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "The id of the instance",
          "type": "string"
        },
        "UniqueName": {
          "description": "The unique name of the instance",
          "type": "string"
        },
        "Version": {
          "description": "The version of the instance",
          "type": "string"
        },
        "ApplicationUrl": {
          "description": "The url to the web application of the instance",
          "type": "string"
        },
        "ApiUrl": {
          "description": "The url of the web api for the instance",
          "type": "string"
        },
        "State": {
          "description": "The state of the instance",
          "enum": [
            "None",
            "Ready",
            "Pending",
            "Inactive",
            "Disabled",
            "FailedProvisioning",
            "PreparingInstance",
            "ReadyToConfigure",
            "Locked"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstanceState"
          }
        },
        "InitialUserPrincipalName": {
          "description": "UserPrincipalName of the initial user",
          "type": "string"
        },
        "StateIsSupportedForDelete": {
          "description": "Indicates whether the instance can be deleted",
          "type": "boolean"
        },
        "AdminMode": {
          "description": "Whether the instance is in admin mode",
          "type": "boolean"
        },
        "Type": {
          "description": "The type of the instance",
          "enum": [
            "None",
            "Production",
            "Sandbox",
            "Support",
            "Preview",
            "Trial",
            "Default",
            "Developer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstanceType"
          }
        },
        "Purpose": {
          "description": "The purpose of the instance",
          "type": "string"
        },
        "FriendlyName": {
          "description": "The friendly name of the instance",
          "type": "string"
        },
        "DomainName": {
          "description": "The public domain name of the instance.",
          "type": "string"
        },
        "BaseLanguage": {
          "format": "int32",
          "description": "The base language code for the instance",
          "type": "integer"
        },
        "InitialUserEmail": {
          "description": "The object id of the user that created the instance",
          "type": "string"
        },
        "SecurityGroupId": {
          "format": "uuid",
          "description": "The (optional) security group set for the instance.",
          "type": "string"
        },
        "AdditionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NewInstance": {
      "description": "The set of instance values that will be used to create a new instance",
      "required": [
        "ServiceVersionId",
        "Type",
        "FriendlyName",
        "DomainName",
        "InitialUserEmail"
      ],
      "type": "object",
      "properties": {
        "Currency": {
          "$ref": "#/definitions/Currency",
          "description": "The Currency settings for the instance"
        },
        "ServiceVersionId": {
          "format": "uuid",
          "description": "ID of the available service to use for the new instance",
          "type": "string"
        },
        "Templates": {
          "description": "The set of templates to be used when creating a new instance",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Type": {
          "description": "The type of the instance",
          "enum": [
            "None",
            "Production",
            "Sandbox",
            "Support",
            "Preview",
            "Trial",
            "Default",
            "Developer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstanceType"
          }
        },
        "Purpose": {
          "description": "The purpose of the instance.",
          "type": "string"
        },
        "FriendlyName": {
          "description": "The friendly name of the instance.",
          "type": "string"
        },
        "DomainName": {
          "description": "The public domain name of the instance.",
          "type": "string"
        },
        "BaseLanguage": {
          "format": "int32",
          "description": "The base language code for the instance",
          "type": "integer"
        },
        "InitialUserEmail": {
          "description": "The object ID of the user who created the instance.",
          "type": "string"
        },
        "SecurityGroupId": {
          "format": "uuid",
          "description": "The (optional) security group set for the instance.",
          "type": "string"
        },
        "AdditionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ResetRequest": {
      "type": "object",
      "properties": {
        "FriendlyName": {
          "description": "Friendly name of the instance.\r\nThis value is from the required \"Name\" input of the Reset UI and is mapped to OrganizationLifecycle.OrganizationFriendlyName in Geo config db.",
          "type": "string"
        },
        "DomainName": {
          "description": "The domain name portion for the org in the org URL, such as \"contoso\".\r\nThis value is from the required \"URL\" input of the Reset UI and is mapped to OrganizationLifecycle.DomainName in Geo config db.",
          "type": "string"
        },
        "Purpose": {
          "description": "Purpose specified for this instance in the Rest UI.\r\nThis value is from the optional \"Purpose\" input of the Reset UI and is mapped to OrganizationLifecycle.Purpose in Geo config db.",
          "type": "string"
        },
        "SecurityGroupId": {
          "format": "uuid",
          "description": "Guid of the security group for which members will sync to this instance\r\nThis value is from the optional Security Group input of the Reset UI and is mapped to OrganizationLifecycle.SecurityGroup in Geo config db.",
          "type": "string"
        },
        "TargetRelease": {
          "description": "The name of the target release.\r\nThis is mapped a specific ReleaseName defined in ScaleGroupReleases table.",
          "type": "string"
        },
        "BaseLanguageCode": {
          "format": "int32",
          "description": "Base language code LCID of the new instance\r\nFor example, 1033 for English.",
          "type": "integer"
        },
        "Currency": {
          "$ref": "#/definitions/Currency",
          "description": "Gets or sets the currency."
        },
        "ApplicationNames": {
          "description": "Applications to have installed initially for the new instance.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PreferredCulture": {
          "format": "int32",
          "description": "Indicates if the customer prefers a certain culture for formatting for the new instance.",
          "type": "integer"
        },
        "AdditionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InstanceRestorePoint": {
      "required": [
        "SourceInstanceId"
      ],
      "type": "object",
      "properties": {
        "SourceInstanceId": {
          "format": "uuid",
          "type": "string"
        },
        "InstanceBackupId": {
          "format": "uuid",
          "description": "The Id of a legacy instance backup to use.  If set, this will be used instead of Label or RestorePoint.",
          "type": "string"
        },
        "Label": {
          "description": "The label of an existing instance backup to use.  If set, this will be used instead of RestorePoint.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "The CreatedOn date and time of an existing instance backup to use.",
          "type": "string"
        }
      }
    },
    "InstanceAdminModeSettings": {
      "type": "object",
      "properties": {
        "OverrideUserObjectId": {
          "format": "uuid",
          "description": "If set, will be used instead of the UserObjectID of the calling user.",
          "type": "string"
        },
        "AdminMode": {
          "description": "Indicates whether to enable or disable the Admin Mode settings.",
          "type": "boolean"
        },
        "BackgroundOperationsEnabled": {
          "description": "Indicates whether to enable or disable the background operations.",
          "type": "boolean"
        },
        "NotificationText": {
          "type": "string"
        }
      }
    },
    "DomainNameSettings": {
      "required": [
        "DomainName"
      ],
      "type": "object",
      "properties": {
        "DomainName": {
          "type": "string"
        },
        "AdditionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConfigureInstanceSettings": {
      "type": "object",
      "properties": {
        "Purpose": {
          "type": "string"
        },
        "AdditionalProperties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "InstanceTypeInfo": {
      "required": [
        "Type",
        "Total",
        "Consumed"
      ],
      "type": "object",
      "properties": {
        "Type": {
          "enum": [
            "None",
            "Production",
            "Sandbox",
            "Support",
            "Preview",
            "Trial",
            "Default",
            "Developer"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "InstanceType"
          }
        },
        "Total": {
          "format": "int32",
          "type": "integer"
        },
        "Consumed": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Language": {
      "required": [
        "LCID",
        "Name",
        "LocalizedName"
      ],
      "type": "object",
      "properties": {
        "LCID": {
          "format": "int32",
          "type": "integer",
          "description": "Locale ID of the language."
        },
        "Name": {
          "type": "string",
          "description": "The language name."
        },
        "LocalizedName": {
          "type": "string"
        }
      }
    },
    "EnvironmentMetadata": {
      "description": "A representation of an EnvironmentMetadata of an UserNotification.",
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "description": "The id of the EnvironmentMetadata.",
          "type": "string"
        },
        "Name": {
          "description": "The name of the EnvironmentMetadata.",
          "type": "string"
        },
        "Geo": {
          "description": "The geo of the EnvironmentMetadata.",
          "type": "string"
        }
      }
    },
    "UserNotification": {
      "description": "A representation of a notification that has been retrieved from/already exists in the Notification Service.",
      "type": "object",
      "properties": {
        "NotificationId": {
          "format": "uuid",
          "description": "The id of the current notification.",
          "type": "string"
        },
        "AdminId": {
          "format": "uuid",
          "description": "The id of the admin associated with the notification.",
          "type": "string"
        },
        "TenantId": {
          "format": "uuid",
          "description": "The id of the tenant associated with the notification.",
          "type": "string"
        },
        "CreatedAt": {
          "format": "date-time",
          "description": "The date and time of when the notification was created.",
          "type": "string"
        },
        "Environments": {
          "description": "The environments associated with the notification.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentMetadata"
          }
        },
        "State": {
          "description": "The state of the notification.",
          "enum": [
            "None",
            "Ready",
            "Unread",
            "Read",
            "Pending",
            "Inactive",
            "Disabled",
            "FailedProvisioning",
            "ReadyToConfigure",
            "Locked"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationState"
          }
        },
        "Priority": {
          "description": "The priority of the notification.",
          "enum": [
            "Unknown",
            "High",
            "Low"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "NotificationPriority"
          }
        },
        "OrgId": {
          "format": "uuid",
          "description": "The id of the org associated with the notification.",
          "type": "string"
        },
        "Content": {
          "$ref": "#/definitions/NotificationContent",
          "description": "The content associated with the notification."
        }
      }
    },
    "NotificationContent": {
      "description": "A representation of the content associated with a notification.",
      "type": "object",
      "properties": {
        "TemplateId": {
          "description": "The id of the template associated with this NotificationContent.",
          "type": "string"
        },
        "TemplateType": {
          "description": "The type of the template associated with this NotificationContent.",
          "type": "string"
        },
        "Slugs": {
          "description": "The slugs to be populated into the NotificationContent.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "QueryOptions": {
      "type": "object",
      "properties": {
        "OperationProvider": {
          "type": "string"
        },
        "InstanceId": {
          "type": "string"
        }
      }
    },
    "ServiceVersion": {
      "required": [
        "LocalizedName",
        "LCID",
        "Version",
        "Id",
        "Name"
      ],
      "type": "object",
      "properties": {
        "LocalizedName": {
          "type": "string",
          "description": "Localized name of the service (release)"
        },
        "LCID": {
          "format": "int32",
          "type": "integer",
          "description": "Locale ID of the service (release)"
        },
        "Version": {
          "type": "string",
          "description": "Version of the service (release)"
        },
        "Id": {
          "format": "uuid",
          "type": "string",
          "description": "ID of the service (release)"
        },
        "Name": {
          "type": "string",
          "description": "Name of the service (release)"
        }
      }
    },
    "Template": {
      "required": [
        "Name",
        "LocalizedName",
        "LocalizedDescription",
        "SupportedReleases"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the template"
        },
        "LocalizedName": {
          "type": "string",
          "description": "Localized name of the template"
        },
        "LocalizedDescription": {
          "type": "string",
          "description": "Localized description of the template"
        },
        "SupportedReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SupportedReleases"
          }
        }
      }
    },
    "SupportedReleases": {
      "type": "object",
      "properties": {
        "Id": {
          "format": "uuid",
          "type": "string",
          "description": "Releases supported by the template"
        },
        "Name": {
          "type": "string"
        },
        "Types": {
          "type": "array",
          "items": {
            "enum": [
              "None",
              "Production",
              "Sandbox",
              "Support",
              "Preview",
              "Trial",
              "Default",
              "Developer"
            ],
            "type": "string"
          }
        }
      }
    },
    "TenantApplicationIdentity": {
      "required": [
        "AadApplicationId",
        "TenantId",
        "Enabled"
      ],
      "type": "object",
      "properties": {
        "Id": {
          "description": "",
          "format": "uuid",
          "type": "string"
        },
        "AadApplicationId": {
          "format": "uuid",
          "description": "Azure Application ID",
          "type": "string"
        },
        "TenantId": {
          "format": "uuid",
          "description": "Tenant ID",
          "type": "string"
        },
        "Enabled": {
          "type": "boolean",
          "description": "Indicates whether the Tenant Application Identity is enabled"
        },
        "CreatedOn": {
          "format": "date-time",
          "description": "Entity created on",
          "type": "string"
        },
        "ModifiedOn": {
          "format": "date-time",
          "description": "Entity last modified on",
          "type": "string"
        }
      }
    },
    "TestRunApi": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "EnvironmentName": {
          "type": "string"
        },
        "TestSuiteName": {
          "type": "string"
        },
        "Organization": {
          "$ref": "#/definitions/TestRunOrganizationInfo"
        },
        "Trigger": {
          "enum": [
            "Unknown",
            "Manual",
            "OrganizationDatabaseUpdate",
            "OrganizationDatabaseUpgrade",
            "OrganizationBitsUpdate",
            "OrganizationPackageInstall",
            "OrganizationPackageUninstall"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestRunTriggerType"
          }
        },
        "Tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Status": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "CompletedOn": {
          "format": "date-time",
          "type": "string"
        },
        "Outcome": {
          "$ref": "#/definitions/TestRunOutcome"
        },
        "EventLogs": {
          "type": "string"
        }
      }
    },
    "TestRunOrganizationInfo": {
      "type": "object",
      "properties": {
        "OrganizationId": {
          "format": "uuid",
          "type": "string"
        },
        "OrganizationUniqueName": {
          "type": "string"
        },
        "OrganizationBaseUrl": {
          "type": "string"
        },
        "OrganizationVersion": {
          "type": "string"
        }
      }
    },
    "TestRunOutcome": {
      "type": "object",
      "properties": {
        "TestCasesRun": {
          "format": "int32",
          "type": "integer"
        },
        "OutcomeSummary": {
          "type": "object",
          "additionalProperties": {
            "format": "int32",
            "type": "integer"
          }
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "Succeeded": {
          "type": "boolean"
        },
        "Message": {
          "type": "string"
        },
        "Tags": {
          "type": "string"
        }
      }
    },
    "GetTestCasesResponseApi": {
      "type": "object",
      "properties": {
        "TestAssemblies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestAssemblyResultApi"
          }
        }
      }
    },
    "TestAssemblyResultApi": {
      "type": "object",
      "properties": {
        "TestAssemblyName": {
          "type": "string"
        },
        "TestCases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCaseResultApi"
          }
        },
        "TotalNumberOfTestCases": {
          "format": "int32",
          "type": "integer"
        },
        "Messages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestCaseResultApi": {
      "type": "object",
      "properties": {
        "TestCaseName": {
          "type": "string"
        },
        "TestAssemblyName": {
          "type": "string"
        },
        "TestCaseRunId": {
          "format": "uuid",
          "type": "string"
        },
        "Outcome": {
          "type": "string"
        },
        "StartTime": {
          "format": "date-time",
          "type": "string"
        },
        "EndTime": {
          "format": "date-time",
          "type": "string"
        },
        "Duration": {
          "type": "string"
        },
        "ResultsUrl": {
          "type": "string"
        },
        "TotalNumberOfTestCases": {
          "format": "int32",
          "type": "integer"
        },
        "TestCaseNumber": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CancelActiveRunResponse": {
      "type": "object",
      "properties": {
        "Cancelled": {
          "type": "boolean"
        }
      }
    },
    "TestSuiteApi": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Name of the test suite."
        },
        "Description": {
          "type": "string"
        },
        "TestSuiteUrl": {
          "type": "string"
        },
        "TestSuiteOriginalUrl": {
          "type": "string"
        },
        "FileSize": {
          "format": "int64",
          "type": "integer"
        },
        "Type": {
          "enum": [
            "Generic",
            "Organization",
            "PowerApp",
            "Flow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestSuiteType"
          }
        },
        "Triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestRunTrigger"
          }
        },
        "Organization": {
          "$ref": "#/definitions/TestSuiteOrganizationInfo"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "CompletionCallback": {
          "$ref": "#/definitions/TestRunCompletionCallbackInfo"
        }
      }
    },
    "TestRunTrigger": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "Unknown",
            "Manual",
            "OrganizationDatabaseUpdate",
            "OrganizationDatabaseUpgrade",
            "OrganizationBitsUpdate",
            "OrganizationPackageInstall",
            "OrganizationPackageUninstall"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestRunTriggerType"
          }
        },
        "Metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TestSuiteOrganizationInfo": {
      "type": "object",
      "properties": {
        "OrganizationUniqueName": {
          "type": "string"
        },
        "OrganizationId": {
          "format": "uuid",
          "type": "string"
        },
        "OrganizationUrl": {
          "type": "string"
        },
        "TenantId": {
          "type": "string"
        }
      }
    },
    "TestRunCompletionCallbackInfo": {
      "type": "object",
      "properties": {
        "CallbackUrl": {
          "type": "string"
        }
      }
    },
    "TestSuiteCreateRequest": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TestSuiteUrl": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "Generic",
            "Organization",
            "PowerApp",
            "Flow"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestSuiteType"
          }
        },
        "Organization": {
          "$ref": "#/definitions/TestSuiteCreateOrganizationInfoApi"
        },
        "CompletionCallback": {
          "$ref": "#/definitions/TestRunCompletionCallbackInfo"
        }
      }
    },
    "TestSuiteCreateOrganizationInfoApi": {
      "type": "object",
      "properties": {
        "OrganizationUniqueName": {
          "type": "string"
        },
        "AdminUserName": {
          "type": "string"
        },
        "AdminPassword": {
          "type": "string"
        },
        "UsersList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfoApi"
          }
        }
      }
    },
    "UserInfoApi": {
      "type": "object",
      "properties": {
        "UserName": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        }
      }
    },
    "TestRunTriggerCreateRequest": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "Type": {
          "enum": [
            "Unknown",
            "Manual",
            "OrganizationDatabaseUpdate",
            "OrganizationDatabaseUpgrade",
            "OrganizationBitsUpdate",
            "OrganizationPackageInstall",
            "OrganizationPackageUninstall"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "TestRunTriggerType"
          }
        },
        "Metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "description": "",
      "flow": "accessCode",
      "authorizationUrl": "https://login.windows.net/common/oauth2/authorize",
      "tokenUrl": "https://login.windows.net/common/oauth2/token",
      "scopes": {}
    }
  }
}